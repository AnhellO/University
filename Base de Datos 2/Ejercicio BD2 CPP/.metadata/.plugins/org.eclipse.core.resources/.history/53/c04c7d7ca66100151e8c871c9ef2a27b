//============================================================================
// Name        : CPP_BD2.cpp
// Author      : 
// Version     :
// Copyright   : Your copyright notice
// Description : Hello World in C++, Ansi-style
//============================================================================

#include <iostream>
#include <cstdio>
#include <cstring>
#include <string>
#include <algorithm>
#include <cmath>
#include <vector>
#include <set>
#include <map>
#include <cstdlib>
#include <cctype>
#include <bitset>
#include <sstream>
#include <stack>
#include <queue>
#include <deque>
#include <list>
#include <iomanip>
#include <utility>
#include <fstream>
#include <functional>
using namespace std;

typedef pair<int, int> ii;
typedef pair<int, ii> iii;
typedef vector<int> vi;
typedef vector<vi> vvi;
typedef vector<ii> vii;
typedef vector<iii> viii;
typedef vector<vii> vvii;
typedef map<int, int> mii;
typedef map<char, int> mci;
typedef map<string, int> msi;
typedef map<int, ii> miii;

string nombre, cYn, col, cp, lugar, tel, mail, fecha;
fstream archivo;

vector<string> split(string s, string regex)
{
	vector<string> sections;
	int pos = s.find_first_of(regex);
	string subS;
	while(pos != string::npos)
	{
		subS = s.substr(0, pos);
		s.erase(0, pos + 1);
		sections.push_back(subS);
		pos = s.find_first_of(regex);
	}
	sections.push_back(s);
	return sections;
}

void alta() {
	archivo.open("archivo.txt", ios::out | ios::app);
	cout << "Introduce tu nombre: ";
	getline(cin, nombre);
	archivo << nombre << '|';
	cout << "Calle y número: ";
	getline(cin, cYn);
	archivo << cYn << '|';
	cout << "Colonia: ";
	getline(cin, col);
	archivo << col << '|';
	cout << "Código Postal: ";
	getline(cin, cp);
	archivo << cp << '|';
	cout << "Lugar: ";
	getline(cin, lugar);
	archivo << lugar << '|';
	cout << "Teléfono: ";
	getline(cin, tel);
	archivo << tel << '|';
	cout << "E-mail: ";
	getline(cin, mail);
	archivo << mail << '|';
	cout << "Fecha de Nacimiento: ";
	getline(cin, fecha);
	archivo << fecha << '\n';
	archivo.close();
}

void baja() {
	cout << "Ingrese el nombre de la persona que desea borrar: ";
	string s;
	cin >> s;
	archivo.open("archivo.txt", ios::in | ios::out);
	string linea;
	bool flag = false;
	vector<vector<string> > registros;
	while(getline(archivo, linea)) {
		vector<string> temp = split(linea, "|");
		if(temp[0] == s) {
			flag = true;
		}
		registros.push_back(temp);
	}
	archivo.close();
	if(!flag) {
		cout << "Registro NO encontrado!!!\n";
		return;
	}
	set<string> nuevosRegistros;
	for(int i = 0 ; i < registros.size() ; i++) {
		if(registros[i][0] == s) {
			continue;
		}
		string temp;
		for(int j = 0 ; j < registros[i].size() - 1 ; j++) {
			temp.append(registros[i][j] + "|");
		}
		temp.append(registros[i][registros[i].size() - 1] + "\n");
		nuevosRegistros.insert(temp);
	}
	archivo.open("archivo.txt", ios::out);
	for(set<string>::iterator it = nuevosRegistros.begin() ; it != nuevosRegistros.end() ; ++it) {
		archivo << *it;
	}
	archivo.close();
	COUT << "Registro borrado exitosamente!!!\n";
}

void consulta() {

}

int main() {
	char opc;
	cout << "\t\tA G E N D A		P E R S O N A L I Z A D A\n";
	cout << "\t\t----------------------------------------------\n\n";
	while(true) {
		cout << "Selecciona una opción: ";
		cin >> opc;
		if(opc == 'A') {
			alta();
		} else if(opc == 'B') {
			baja();
		} else if(opc == 'M') {
		} else if(opc == 'C') {
		} else if(opc == 'I') {
		} else if(opc == 'S') {
			return 0;
		} else {
			cout << "Opción incorrecta. : ";
			cin >> opc;
		}
	}
}
