// Agent tom in project Practica2.mas2j


/* Initial beliefs and rules */

/* The main program */

yo(tom).

/* Relaciones paternales */

es_padre_de(fred,erik).
es_padre_de(fred,tom).
es_padre_de(erik,eve).
es_padre_de(bob,liz).
es_padre_de(john,fred).
es_padre_de(john,karl).

/* Relaciones maternales */
es_madre_de(liz,erik).
es_madre_de(liz,tom).
es_madre_de(sally,liz).
es_madre_de(ann,fred).
es_madre_de(ann,karl).
es_madre_de(july,eve).

/* Relaciones de hermanos
Nota: Segun el diccionario consideramos hermanos aquellos que comparten un padre o una madre.
*/

//Primero suponemos que comparten solo padre y no son la misma persona
es_hermano_de(X,Y) :-
	es_padre_de(Z,X)
	& es_padre_de(Z,Y)
	& es_madre_de(W,X)
	& not es_madre_de(W,Y)
	& not X=Y.


//Segundo suponemos que comparten solo madre y no son la misma persona
es_hermano_de(X,Y) :-
	es_madre_de(Z,X)
	& es_madre_de(Z,Y)
	& es_padre_de(W,X)
	& not es_padre_de(W,Y)
	& not X=Y.


//Tercero suponemos que comparten padre y madre y no son la misma persona

es_hermano_de(X,Y) :- 
	es_padre_de(Z,X)
	& es_padre_de(Z,Y)
	& es_madre_de(W,X)
	& es_madre_de(W,Y)
	& not X=Y.

/*
NOTA: Fijaros que el hecho de que tengan padre o madre distinta incluye las situaciones 
de padres divorciados o de horfandad 

Relaciones de parentesco 
Modificamos las anteriores para diferenciar explicitamente entre antepasados y descendientes. 
Comparar las soluciones con la version anterior.
*/

// Primero reglas para "X es_antepasado_de Y"
es_antepasado_de(X,Y) :- 
	es_padre_de(X,Y).

es_antepasado_de(X,Y) :- 
	es_madre_de(X,Y).

es_antepasado_de(X,Y) :- 
	es_padre_de(X,Z)
	& es_antepasado_de(Z,Y).
	
es_antepasado_de(X,Y) :- 
	es_madre_de(X,Z)
	& es_antepasado_de(Z,Y).

es_antepasadoIndirecto_de(X,Y) :- 
	es_hermano_de(X,Z)
	& es_antepasado_de(Z,Y).
	
// Luego reglas para "X es_descendiente_de Y"
es_descendiente_de(X,Y) :- 
	es_padre_de(Y,X).

es_descendiente_de(X,Y) :- 
	es_madre_de(Y,X).

es_descendiente_de(X,Y) :- 
	es_padre_de(Y,Z)
	& es_descendiente_de(X,Z).

es_descendiente_de(X,Y) :- 
	es_madre_de(Y,Z)
	& es_descendiente_de(X,Z).

// Por œltimo las reglas para "X es_pariente_de Y"
es_pariente_de(X,Y) :-
	es_antepasado_de(X,Y)
	& not X=Y.

es_pariente_de(X,Y) :-
	es_antepasadoIndirecto_de(X,Y)
	& not X=Y.

es_pariente_de(X,Y) :-
	es_descendiente_de(X,Y)
	& not X=Y.

/* Initial goals */


/* Plans */

+hello[source(B)] <- .print("Muy bien, y tu que tal ",B," ? ");
					 .send(B,tell,preguntar_por_familia_tom).

+preguntar_por_familia_bob[source(B)] <- .print("Bien, la tuya que tal???");
										.send(B,tell,nombre_hija_tom).
										
+nombre_hija_bob[source(B)] <- .findall(Hijo,es_descendiente_de(Hijo,tom),L);
							    if(.empty(L)) {
									.print("No tengo hijos. Tu tienes una hija cierto??, como se llama?");
									.send(B,tell,nombre_hermanos_tom);
								} else {
									.print("Si, mis hijos se llaman ",L);
									.send(B,tell,nombre_hermanos_tom);
								}.
								
+nombre_esposa_bob[source(B)] <- .findall(X,es_hermano_de(X,tom),L);
								  if(.empty(L)) {
								  	.print("No tengo hermanos. Como está tu esposa??");
									.send(B,tell,adios_tom);
								  } else {
								  	.print("Si, mis hermanos son: ",L, ". Por cierto, como está tu esposa??");
									.send(B,tell,adios_tom);
								  }.
								  
+adios_bob[source(B)] <- .print("Adios amigo!!!, salúdame a todos!!!").
